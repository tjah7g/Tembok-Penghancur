/////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*-------------------------------*****************************************----------------------------------
 |                                *                                      *                                 |
 |                                *		      My Bricks Breaker          *                                 |
 |                                *                                      *                                 |
 ---------------------------------****************************************----------------------------------*/
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
Alejandro Ricciardi (Omegapy)
created date: 01/07/2023


                                              My Bricks Breaker


My Bricks Breaker is a personal project in c++ and raylib.

The program is the base or foundation code for a bricks breaker game. It is not a full game,
but you can use it to make your own Bricks Breaker game.

A Brick Breaker is an arcade game, the goal of the game is to destroy Bricks by launching a ball at them.

Requirement
c and c++
MS Windows 10 or later
Raylib library: https://www.raylib.com

****** Please see the README.txt file for more information about this project **********

My links:
https://github.com/Omegapy
https://www.youtube.com/watch?v=CRRbDVxea9s
*/
/////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*--------------------------------****************************************----------------------------------
 |                                *                                      *                                 |
 |                                *		          Headers                *                                 |
 |                                *                                      *                                 |
 ---------------------------------****************************************---------------------------------*/
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "Level.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*--------------------------------****************************************----------------------------------
 |                                *                                      *                                 |
 |                                *	            Classes                  *                                 |
 |                                *                                      *                                 |
 ---------------------------------****************************************---------------------------------*/
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////
 /*

    ------------------------------------------

        Renders ball, paddle, and FPS
        Parent class to Level class

     ----------------------------------------
    Instance();

    ------------------------------------------

        Renders ball, paddle, FPS, and Bricks
        Child class of the Instance class

     ----------------------------------------
    Level(vector<int> &brickType)


 */


 //////////////////////////////////////////////////////////////////////////////////////////////////////////////
 /*--------------------------------****************************************----------------------------------
  |                                *                                      *                                 |
  |                                *	     Function Declarations        *                                 |
  |                                *                                      *                                 |
  ---------------------------------****************************************---------------------------------*/
  //////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*----------------------------------------------------

    Centers window in current monitor

 -----------------------------------------------------*/
void centerWindow(float windowWidth, float windowHeight);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*--------------------------------****************************************----------------------------------
 |                                *                                      *                                 |
 |                                *		           Main                  *                                 |
 |                                *                                      *                                 |
 ---------------------------------****************************************---------------------------------*/
 ////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
 //------------------------------------------------------------------------------------
 // Program main entry point
 //------------------------------------------------------------------------------------
int main()
{
    //--------------------------------------------------------------------------------------

    // variables
    //--------------------------------------------------------------------------------------
    // Screen
    const int windowWidth = WIN_WD;
    const int windowHeight = WIN_HT;


    //--------------------------------------------------------------------------------------

    // Initialization Window, OpenGL context, Texture Loads need to be call after this point 
    //--------------------------------------------------------------------------------------
    // 
    // Enable vertical synchro 
    SetConfigFlags(FLAG_VSYNC_HINT); // synchronized game frame rate with screen frame rate
    InitWindow(windowWidth, windowHeight, "My Bricks Breaker");

    centerWindow(windowWidth, windowHeight);

    //--------------------------------------------------------------------------------------

    // Initialize audio device and context
    //--------------------------------------------------------------------------------------
    InitAudioDevice();

    //Menu menu;

    vector<int> brickType;
    for (int i = 0; i < 7; i++)
    {
        for (int j = 0; j < 14; j++)
        {
            brickType.push_back(i);
        }
    }

    Level level(brickType);
    level.render();


    //--------------------------------------------------------------------------------------

    // De-Initialization
    //--------------------------------------------------------------------------------------

    CloseAudioDevice();
    CloseWindow(); // Close window and OpenGL context

    //--------------------------------------------------------------------------------------

    return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*--------------------------------****************************************----------------------------------
|                                *                                      *                                 |
|                                *	        Function Definitions        *                                 |
|                                *                                      *                                 |
---------------------------------****************************************---------------------------------*/
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

//--------------------------------------------------------------------- Function centerWindow()
/*----------------------------------------------------

    Centers window in current monitor

 -----------------------------------------------------*/

void centerWindow(float windowWidth, float windowWeight)
{
    int monitor = GetCurrentMonitor();// Get current connected monitor
    int monitorWidth = GetMonitorWidth(monitor); // Get specified monitor width (current video mode used by monitor)
    int monitorHeight = GetMonitorHeight(monitor); // Get specified monitor height (current video mode used by monitor)
    SetWindowPosition((int)(monitorWidth / 2) - (int)(windowWidth / 2), (int)(monitorHeight / 2) - (int)(windowWeight / 2));
}


